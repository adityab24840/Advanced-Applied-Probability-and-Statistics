library(ggplot2)
library(dplyr)
library(HSAUR)
library(ggcorrplot)
# Load California housing data
file = 'Data/SaratogaHouses.csv'
hData = read.csv(file, header = TRUE, stringsAsFactors = FALSE)
setwd("D:/MSIS/Semester 2/Advanced-Applied-Probability-and-Statistics")
library(ggplot2)
library(dplyr)
library(HSAUR)
library(ggcorrplot)
# Load California housing data
file = 'Data/SaratogaHouses.csv'
hData = read.csv(file, header = TRUE, stringsAsFactors = FALSE)
# Convert heating column to factor type
hData[heating] <- lapply(hData[heating], as.factor)
# Convert heating column to factor type
hData[heating] <- lapply(hData[heating], as.factor)
setwd("D:/MSIS/Semester 2/Advanced-Applied-Probability-and-Statistics/Codes")
library(ggplot2)
library(dplyr)
library(HSAUR)
library(ggcorrplot)
# Load California housing data
file = 'Data/SaratogaHouses.csv'
hData = read.csv(file, header = TRUE, stringsAsFactors = FALSE)
hData = hData %>% select(c(price,livingArea, heating))
str(hData)
# Load California housing data
file = 'Data/SaratogaHouses.csv'
hData = read.csv(file, header = TRUE, stringsAsFactors = FALSE)
hData = hData %>% select(c(price,livingArea, heating))
str(hData)
# Convert heating column to factor type
hData[heating] <- lapply(hData[heating], as.factor)
# Convert heating column to factor type
hData[heating] <- lapply(hData[heating], as.factor)
# Convert heating column to factor type
hData[heating] <- lapply(hData[heating], as.factor)
# Convert heating column to factor type
hData[heating] <- lapply(hData[heating], as.factor)
# Load California housing data
file = 'Data/SaratogaHouses.csv'
hData = read.csv(file, header = TRUE, stringsAsFactors = FALSE)
hData = hData %>% select(c(price,livingArea, heating))
str(hData)
# Convert heating column to factor type
hData[heating] <- lapply(hData[heating], as.factor)
# Convert heating column to factor type
hData[heating] <- lapply(hData[heating], factor)
# Convert heating column to factor type
hData[heating] <- lapply(hData[heating], factor)
# Convert heating column to factor type
hData[heating] <- lapply(hData[heating], factor)
# Convert heating column to factor type
hData[heating] <- lapply(hData[heating], factor)
# Convert heating column to factor type
hData[heating] <- lapply(hData[heating], factor)
# Convert heating column to factor type
hData[heating] <- lapply(hData[heating], factor)
# Make a scatter plot between price and livingArea
p = ggplot(data = hData ) +
geom_(aes(x = price, y = ..count..),breaks = seq(mean(hData$price)-4*sd(hData$price), mean(hData$price)+4*sd(hData$price), by = 500), color = 'black', fill ='blue' )+
labs(x = 'Price', y = 'Frequency')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
library(ggplot2)
library(dplyr)
library(HSAUR)
library(ggcorrplot)
# Load California housing data
file = 'Data/SaratogaHouses.csv'
hData = read.csv(file, header = TRUE, stringsAsFactors = FALSE)
hData = hData %>% select(c(price,livingArea, heating))
str(hData)
# Convert heating column to factor type
hData[heating] <- lapply(hData[heating], as.factor)
# Convert heating column to factor type
hData[heating] <- lapply(hData[heating], as.factor)
# Load California housing data
file = 'Data/SaratogaHouses.csv'
hData = read.csv(file, header = TRUE, stringsAsFactors = FALSE)
hData = hData %>% select(c(price,livingArea, heating))
str(hData)
# Convert heating column to factor type
hData[heating_col] <- lapply(hData[heating_col], as.factor)
# Make a scatter plot between price and livingArea
p <- ggplot(data = hData) +
geom_(aes(x = price, y = ..count..), breaks = seq(mean(hData$price) - 4 * sd(hData$price), mean(hData$price) + 4 * sd(hData$price), by = 500), color = "black", fill = "blue") +
labs(x = "Price", y = "Frequency") +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
# Convert heating column to factor type
hData[heating_col] <- lapply(hData[heating_col], as.factor)
library(ggplot2)
library(dplyr)
library(HSAUR)
library(ggcorrplot)
# Load California housing data
file = 'Data/SaratogaHouses.csv'
hData = read.csv(file, header = TRUE, stringsAsFactors = FALSE)
hData = hData %>% select(c(price,livingArea, heating))
str(hData)
# Load California housing data
file = 'Data/SaratogaHouses.csv'
hData = read.csv(file, header = TRUE, stringsAsFactors = FALSE)
hData = hData %>% select(c(price,livingArea, heating))
str(hData)
# Convert heating column to factor type
hData[heating] <- lapply(hData[heating],factor)
# Convert heating column to factor type
hData[heating] <- lapply(hData['heating'],factor)
library(ggplot2)
library(dplyr)
library(HSAUR)
library(ggcorrplot)
# Load California housing data
file = 'Data/SaratogaHouses.csv'
hData = read.csv(file, header = TRUE, stringsAsFactors = FALSE)
hData = hData %>% select(c(price,livingArea, heating))
str(hData)
# Convert heating column to factor type
hData[heating] <- lapply(hData['heating'],factor)
# Convert heating column to factor type
hData[heating_col] <- lapply(hData[heating_col], as.factor)
library(ggplot2)
library(dplyr)
library(HSAUR)
library(ggcorrplot)
# Load California housing data
file = 'Data/SaratogaHouses.csv'
hData = read.csv(file, header = TRUE, stringsAsFactors = FALSE)
hData = hData %>% select(c(price,livingArea, heating))
str(hData)
# Convert heating column to factor type
hData['heating'] = lapply(hData['heating'],factor)
str(hData)
# Make a scatter plot between price and livingArea
p = ggplot(data = hData) +
geom_histogram(aes(x = as.numeric(price), y = after_stat(..count..)),
breaks = seq(mean(hData$price) - 4 * sd(hData$price),
mean(hData$price) + 4 * sd(hData$price),
by = 20000),
color = 'black', fill = 'blue') +
labs(x = 'Price', y = 'Frequency')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
# Make a scatter plot between price and livingArea
p = ggplot(data = hData) +
geom_histogram(aes(x = as.numeric(price), y = after_stat(..count..)),
breaks = seq(mean(hData$price) - 4 * sd(hData$price),
mean(hData$price) + 4 * sd(hData$price),
by = 25000),
color = 'black', fill = 'blue') +
labs(x = 'Price', y = 'Frequency')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
# Make a scatter plot between price and livingArea
p = ggplot(data = hData) +
geom_histogram(aes(x = as.numeric(price),
y = after_stat(..count..)),
breaks = seq(mean(hData$price) - 4 * sd(hData$price),
mean(hData$price) + 4 * sd(hData$price),
by = 25000),
color = 'black', fill = 'blue') +
labs(x = 'Price', y = 'Frequency')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
hData %>% filter(price <= median(hData$price))
nrow(hData %>% filter(price <= median(hData$price)))
nrow(hData %>% filter(price <= median(hData$price)))/nrow(hData)
quantile(hData$price,0.75)
quantile(hData$price,0.5)
quantile(hData$price,0.25)
mean(price)
mean(hData$price)
price_scaled = scale(hData$price)
hist(price_scaled)
price_scaled = (hData$price - mean(hData$price))/sd(hData$price)
price_scaled = scale(hData$price)
hist(price_scaled)
sd
# Make a scatter plot between price and livingArea
p = ggplot(data = hData) +
geom_point(aes(x = livingArea, y = as.numeric(price) )) +
labs(x = 'Living Area (square feet)', y = 'Price (US dollars)')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
# Make a scatter plot between price and livingArea
p = ggplot(data = hData) +
geom_boxplot(aes(x = heating, y = as.numeric(price) )) +
labs(x = 'Living Area (square feet)', y = 'Price (US dollars)')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
# Make a scatter plot between price and livingArea
p = ggplot(data = hData) +
geom_boxplot(aes(x = heating, y = as.numeric(price) )) +
labs(x = 'Living Area (square feet)', y = 'Price (US dollars)')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
# Make a scatter plot between price and livingArea
p = ggplot(data = hData) +
geom_point(aes(x = livingArea, y = as.numeric(price) )) +
labs(x = 'Heating', y = 'Price (US dollars)')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
# Make a scatter plot between price and livingArea
p = ggplot(data = hData) +
geom_boxplot(aes(x = heating, y = as.numeric(price) )) +
labs(x = 'Heating', y = 'Price (US dollars)')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
hData %>% filter( heating == 'hot air') %>% select(price)
hist(hData %>% filter( heating == 'hot air') %>% select(price))$price
x= hist(hData %>% filter( heating == 'hot air') %>% select(price))$price
# Make a box plot between frrequency and heating
p = ggplot(data = hData) +
geom_boxplot(aes(x = heating, y = after_stat(..count..))) +
labs(x = 'Heating', y = 'frequency')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
# Make a box plot between frrequency and heating
p = ggplot(data = hData) +
geom_boxplot(aes(x = heating, y = ..count..)) +
labs(x = 'Heating', y = 'frequency')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
# Make a box plot between frrequency and heating
p = ggplot(data = hData) +
geom_boxplot(aes(x = heating, y = ..count..)) +
labs(x = 'Heating', y = 'frequency')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
# Make a bar plot between frrequency and heating
p = ggplot(data = hData) +
geom_bar(aes(x = heating, y = ..count..)) +
labs(x = 'Heating', y = 'frequency')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
# Make a bar plot between frrequency and heating
p = ggplot(data = hData) +
geom_bar(aes(x = heating, y = ..count../sum(..count..))) +
labs(x = 'Heating', y = 'frequency')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
# Make a bar plot between frrequency and heating
p = ggplot(data = hData) +
geom_bar(aes(x = heating, y = ..count../sum(..count..)*100)) +
labs(x = 'Heating', y = 'frequency')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
# Make a bar plot between frrequency and heating
p = ggplot(data = hData) +
geom_bar(aes(x = heating, y = ..count../sum(..count..)*100)) +
labs(x = 'Heating', y = 'frequency %')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
# Make a bar plot between frrequency and heating
p = ggplot(data = hData) +
geom_bar(aes(x = heating, y = ..count../sum(..count..)*100)) +
labs(x = 'Heating', y = 'frequency %')  +
theme(axis.text = element_text(size = 12),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14, face = "bold"))
p
